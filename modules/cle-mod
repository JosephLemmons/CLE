##
## ** cle-mod: CLE module management **
#
#* version: 2019-03-26
#* author:  Michael Arbet (marbet@redhat.com)
#* home:    https://github.com/micharbet/CLE
#* license: GNU GPL v2
#* Copyright (C) 2016-2019 by Michael Arbet 
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 

local INDEXFILE=modulist
local MODINDEX=$CLE_D/$INDEXFILE
#
# cle-mod helper functions
#
# check installed module - where it came from
_modstat () (
	M=`basename $1`
	SUM=`_modsum $1`
	if grep -q $M $MODINDEX; then
		if grep -q "$M:.*:$SUM" $MODINDEX; then
			echo ""
			return 0	# code 0, module ok
		else
			# this module has different checksum
			echo "UPG"
			return 1	# code 1 means upgradable module
		fi
	else
		# this module doesn't exist in official repo
		echo "CUS"
		return 2		# means: custom module
	fi
)

# extract module description 
_modesc () ( sed -n "/^##/s/.*$(basename $1):\s*\([^*]*\)\**/\1/p" $1; )

# extract module version 
_modver () ( sed -n "s/^#\* version:\s*//p" $1; )

# compute module content checksum
_modsum () ( md5sum $1 | cut -d' ' -f1; )

# module deails
_modetails () (
	M=$CLE_D/$1
	MDESC=`_modesc $M`
	MSTAT=`_modstat $M`
	MVER=`_modver $M`
	printf "$_CL%-15s $_CN$_CD [%-3s %10s] $_CN %s\n" "$1" "$MSTAT" "$MVER" "$MDESC"
)

# get list of currently installed modules
_modinst () (
	cd $CLE_D
	ls cle-* mod-* bin-* 2>/dev/null
)

# download list of available modules
_modindex () (
	curl -ksS $CLE_SRC/modules/$INDEXFILE >$MODINDEX.tmp
	M=`head -1 $MODINDEX.tmp`
	# check if the file appears lik module index
	if [[ $M =~ ..*:.*:.*:.* ]]; then
		mv -f $MODINDEX.tmp $MODINDEX
	else
		rm -f $MODINDEX.tmp
		echo Module list could not be downloaded from $CLE_SRC
		return 1
	fi
)

# variable used only in this script
local M MM MODS DMM MDESC MSRC MVER

case "$1" in
ls)	## `cle mod ls`        - list installed modules
	printb ${_CU}Modules installed in $CLE_D:
	for M in `_modinst`; do
		_modetails $M
	done
	;;
avail)	## `cle mod avail`     - list modules available to install
	_modindex || return $?
	printb ${_CU}Modules available in repository: $CLE_SRC
	cat $MODINDEX | { IFS=:; while read MM MVER MSUM MDESC; do
		printf "$_CW%-15s $_Cw[%10s] $_CN%s\n" $MM "$MVER" "$MDESC"
	done; }
	;;
add)	## `cle mod add [mod]` - install/upgrade module from repository
	_modindex || return $?

	# get matching modules
	MODS=`grep ^[^:]*$2[^:]* $MODINDEX |cut -d: -f1`
	[ "$MODS" ] || { echo Nothing like $2 to install; return 1; }

	# choose one if there are more matches
	MODN=`wc -w <<<$MODS`
	if [ $MODN -gt 1 ]; then
		# chose one module in case of more matches
		PS3="$_CL choose module # $_CN"
		select MM in $MODS; do
			[ -n "$MM" ] && break
		done
	else
		MM=$MODS
	fi
	[ $MM ] || return

	# show selected module details
	echo
	grep ^$MM $MODINDEX | { IFS=:; read MM MVER MSUM MDESC; 
		printf "$_CW%-15s $_Cw[%10s] $_CN%s\n" $MM "$MVER" "$MDESC"; }
	ask "Do yo want to install this module?" || return

	# module setup
	printb "Downloading $MM"
	DMM=$CLE_D/dl-$MM
	curl -ksS $CLE_SRC/modules/$MM >$DMM
	# check module signature
	# every regular cle module should have at least it's identification strings
	# (comments at the beginning, see this file or mod-example)
	if grep -q "## *.*$MM: ..*" $DMM ; then
		mv -f $DMM $CLE_D/$MM
		if [[ $MM =~ 'mod-' ]]; then
			# now include the module
			printb Executing module $CLE_D/$MM
			MDESC=`_modesc $CLE_D/$MM`
			_clexe $CLE_D/$MM && { echo $MM: $MDESC; printb ready!; }
		fi
	else
		# either download error or this is no module
		printb Error, no module header found, see following:
		head $DMM
		printb Removing temporary file...
		rm -f $DMM
		return 1
	fi
	;;
del)	## `cle mod del [mod]` - delete module
	MODS=`_modinst | grep "$2"`
	[ "$MODS" ] || { echo Nothing like $2 to remove; return 1; }
	MODN=`wc -w <<<$MODS`
	if [ $MODN -gt 1 ]; then
		# chose one in case of more matches
		PS3="$_CL choose module to remove # $_CN"
		select MM in $MODS; do
			[ -n "$MM" ] && break
		done
	else
		MM=$MODS
	fi
	[ $MM ] || return
	echo
	_modetails $MM
	ask "Do yo want to remove this?" || return
	mkdir -p $CLE_D/off
	mv -f $CLE_D/$MM $CLE_D/off
	echo Module $MM moved into $CLE_D/off
	;;
update)
	printb Module update - not implemented yet, TBD
	;;
'')
	printb ${_TU}CLE module management
	echo "Repository:$_Cw $CLE_SRC/$_CN"
	echo "Local lib: $_Cw $CLE_D$_CN"
	echo
	cle help "cle mod"
	;;
help)
	cle help "cle mod"
	;;
*)
	echo "'cle mod $1' not implemented"
	echo "Try 'cle mod help '"
	return 1
	;;
esac

# remove internal functions
unset _modstat _modesc _modver _modsum _modetails _modinst _modindex

