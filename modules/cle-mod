##
## ** cle-mod: CLE module management **
#
#* version: 2019-03-27
#* author:  Michael Arbet (marbet@redhat.com)
#* home:    https://github.com/micharbet/CLE
#* license: GNU GPL v2
#* Copyright (C) 2016-2019 by Michael Arbet 
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 

local INDEXFN=modulist
local INDEXFILE=$CLE_D/$INDEXFN

# variable used only in this script
local MOD MODS DMOD 

#
# cle-mod helper functions
#
# check module status: installed/upgradable/custom
_clemodstat () (
	if [ -f $CLE_D/$1 ]; then
		SUMM=`md5sum $CLE_D/$1 | cut -d' ' -f1`
		SUMI=`sed -n "/^$1:/s/$1:[^:]*:\([^:]*\):.*/\1/p" $INDEXFILE`
		if [ -z "$SUMI" ]; then
			# custom module, not found in index
			echo C
			return 2
		elif [ $SUMI = $SUMM ]; then
			# installed
			echo I
			return 0
		else
			# installed, upgradable
			echo U
			return 1
		fi
	else
		# no such module here
		echo
		return 3
	fi
)

# extract module description 
_clemodesc () (
	if [ -f $CLE_D/$1 ]; then
		# get description from module directly
		sed -n "/^##/s/.*$(basename $1):\s*\([^*]*\)\**/\1/p" $CLE_D/$1
	else
		# get description from index file
		sed -n "/^$1:/s/$1:.*:\(.*\)/\1/p" $INDEXFILE
	fi
)

# extract module version 
_clemodver () (
	if [ -f $CLE_D/$1 ]; then
		# get version from module directly
		sed -n "s/^#\* version:\s*//p" $CLE_D/$1
	else
		# get version from index file
		sed -n "/^$1:/s/$1:\([^:]*\):.*/\1/p" $INDEXFILE
	fi
)

# print module deails
_clemodet () (
	MDESC=`_clemodesc $1`
	MSTAT=`_clemodstat $1`
	MVER=`_clemodver $1`
	printf "$_CN [%1s] $_CL%-15s $_CN$_CD %10s $_CN %s\n" "$MSTAT" "$1" "$MVER" "$MDESC"
)

# get list of installed and available modules
_clemodlist () {
	pushd $CLE_D >/dev/null
	INST=`ls cle-* mod-* bin-* 2>/dev/null`
	AVAIL=`cut -d: -f1 $INDEXFILE`
	sort <<<$INST$'\n'$AVAIL | uniq
	popd >/dev/null
}

# download list of available modules
_clemodindex () (
	curl -ksS $CLE_SRC/modules/$INDEXFN >$INDEXFILE.tmp
	MLINE=`head -1 $INDEXFILE.tmp`
	# check if the file appears like module index
	if [[ $MLINE =~ ..*:.*:.*:.* ]]; then
		mv -f $INDEXFILE.tmp $INDEXFILE
	else
		rm -f $INDEXFILE.tmp
		echo Module list could not be downloaded from $CLE_SRC
		return 1
	fi
)

#
# cle mod script main
#
case "$1" in
ls)	## `cle mod ls`        - list modules
	pushd $CLE_D >/dev/null
	printb "Repository:  $CLE_SRC"
	printb "Local store: $CLE_D"
	_clemodindex
	echo
	for MOD in `_clemodlist`; do
		_clemodet $MOD
	done
	popd >/dev/null
	;;
add)	## `cle mod add [mod]` - install/upgrade module from repository
	_clemodindex || return $?
	pushd $CLE_D >/dev/null

	# get matching modules
	#MODS=`grep ^[^:]*$2[^:]* $INDEXFILE |cut -d: -f1`
	MODS=`sed -n "/[^:]*$2[^:]*/s/\([^:]*\):.*/\1/p" $INDEXFILE`
	[ "$MODS" ] || { echo Nothing like $2 to install; popd >/dev/null; return 1; }

	# choose one if there are more matches
	MODN=`wc -w <<<$MODS`
	if [ $MODN -gt 1 ]; then
		# chose one module in case of more matches
		PS3="$_CL choose module # $_CN"
		select MOD in $MODS; do
			[ -n "$MOD" ] && break
		done
	else
		MOD=$MODS
	fi
	[ $MOD ] || { popd >/dev/null; return; }

	# show selected module details
	echo
	_clemodet $MOD
	ask "Do you want to install this module?" || { popd >/dev/null; return; }

	# module setup
	echo "Downloading $MOD"
	DMOD=$CLE_D/dl-$MOD
	curl -ksS $CLE_SRC/modules/$MOD >$DMOD
	# check module signature
	# every regular cle module should have at least it's identification strings
	# (comments at the beginning, see this file or mod-example)
	if grep -q "## *.*$MOD: ..*" $DMOD ; then
		mv -f $DMOD $CLE_D/$MOD
		if [[ $MOD =~ 'mod-' ]]; then
			# now include the module
			echo Executing module $CLE_D/$MOD
			_clexe $CLE_D/$MOD
		fi
		echo ready:
		_clemodet $MOD
		popd >/dev/null
	else
		# either download error or this is no module
		printb Download error, no module header found, see following:
		head $DMOD
		printb Removing temporary file...
		rm -f $DMOD
		popd >/dev/null
		return 1
	fi
	;;
del)	## `cle mod del [mod]` - delete module
	pushd $CLE_D >/dev/null
	MODS=`ls cle-* mod-* bin-* 2>/dev/null | grep $2`
	[ "$MODS" ] || { echo Nothing like $2 to remove; popd >/dev/null; return 1; }
	MODN=`wc -w <<<$MODS`
	if [ $MODN -gt 1 ]; then
		# chose one in case of more matches
		PS3="$_CL choose module to remove # $_CN"
		select MOD in $MODS; do
			[ -n "$MOD" ] && break
		done
		echo
	else
		MOD=$MODS
	fi
	[ $MOD ] || { popd >/dev/null; return; }
	_clemodet $MOD
	ask "Do yo want to remove this?" || { popd >/dev/null; return; }
	mkdir -p off
	mv -f $MOD off
	echo Module $MOD moved into $CLE_D/off
	popd >/dev/null
	;;
update)
	printb Module update - not implemented yet, TBD
	;;
'')
	printb ${_CU}CLE module management
	echo "Repository:  $_Cw $CLE_SRC/$_CN"
	echo "Local store: $_Cw $CLE_D$_CN"
	echo
	cle help "cle mod"
	;;
help)
	cle help "cle mod"
	;;
*)
	echo "'cle mod $1' not implemented"
	echo "Try 'cle mod help '"
	return 1
	;;
esac

# remove internal functions
unset _clemodstat _clemodesc _clemodver _clemodet _clemodlist _clemodindex

