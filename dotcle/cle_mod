##
## cle_mod: CLE module management
## ------------------------------
#* version: 2017-08-03
#* author:  Michael Arbet (marbet@redhat.com)
#* home:    https://github.com/micharbet/CLE
#* license: GNU GPL v2
#* Copyright (C) 2016-2017 by Michael Arbet 
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 

local LISTFILE=modulist
local MODULIST=$CLE_DM/$LISTFILE

#
# cle_mod helper functions
#
# check installed module - where it came from
_modsource () {
	local LINK=`readlink $1`
	local MM=`basename $1`
	local MSRC="LN"
	if [ -z "$LINK" ]; then
		if grep $MM $MODULIST >/dev/null; then
			MSRC="DL"
		else
			echo "CU"
			return 2	# return code indicates module not to be deleted!
		fi
	fi
	echo $MSRC
}

# extract module description 
_modesc () {
	local MM=`basename $1`
	sed -n "s/^## $MM:\s*//p" $1
}

# extract module version 
_modver () {
	sed -n "s/^#\* version:\s*//p" $1
}

# compute module content checksum
_modsum () {
	md5sum $1 | cut -d' ' -f1
}


# variable used only in this script
local M MM DMM MDESC MSRC MVER
case "$1" in
list)	## cle mod list    -- list installed modules
	printb Modules installed in $CLE_DM:
	for M in $CLE_DM/mod-* $CLE_DM/cle_*; do
		MM=`basename $M`
		MDESC=`_modesc $M`
		MSRC=`_modsource $M`
		MVER=`_modver $M`
		printf "$_TW%-15s $_Tw[%-3s %10s] $_TN%s\n" $MM $MSRC "$MVER" "$MDESC"
	done
	;;
avail)	## cle mod avail   -- list modules available to install
	printb Modules available in repository: $CLE_SRC
	curl -ksS $CLE_SRC/dotcle/$LISTFILE >$MODULIST
	cat $MODULIST | { IFS=:; while read MM MVER MSUM MDESC; do
		printf "$_TW%-15s $_Tw[%10s] $_TN%s\n" $MM "$MVER" "$MDESC"
	done; }
	;;
add)	## cle mod add [mod] -- install/upgrade module from repository
	if [ -z "$2" ]; then
		cle mod avail
		PS3="$_TL choose module # $_TN"
		select MM in `cat $MODULIST|cut -d: -f1`; do
			[ -n "$MM" ] && break
		done
	else
		# construct module name, you can omit 'mod-' on command line 
		[[ $2 =~ 'mod-' ]] && MM=$2 || MM=mod-$2
	fi

	# download module into temporary file
	# this doesn't destroy one that is already installed
	printb "Downloading $MM"
	DMM=$CLE_DM/dl-$MM
	curl -ksS $CLE_SRC/dotcle/$MM >$DMM

	# check module signature
	if grep -q "## *$MM: ..*" $DMM ; then
		mv $DMM $CLE_DM/$MM
		if [[ $MM =~ 'mod-' ]]; then
			# immediately include the module
			printb Executing module $CLE_DM/$MM
			MDESC=`_modesc $CLE_DM/$MM`
			_clexe $CLE_DM/$MM && { echo $MM: $MDESC; printb ready!; }
		fi
	else
		printb Error, no module header found
		head $DMM
		printb Removing temporary file...
		rm -f $DMM
	fi
	;;
del)	## cle mod del [mod] -- delete module
	echo TBD!
	;;
'')
	printb CLE module management
	echo Repository: $CLE_SRC
	echo Modules in: $CLE_DM
	;;
help)
	cle help "cle mod"
	;;
*)
	echo "'cle mod $1' not implemented"
	echo "Try 'cle mod help '"
	return 1
	;;
esac

# remove internal functions
unset _modsource _modesc _modver _modsum 
