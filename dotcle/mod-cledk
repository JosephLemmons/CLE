##
## mod-cledk: functions to assist CLE development process
## -------------------------------------------------------

# basically enhancement of 'cle' command - things not needed regularly
## cle ed    - edit $CLERC file
_cle_ed () {
	cp $CLE_RC $CLE_RC-backup
	vi $CLE_RC
}

## cle ls    - list CLE related files
_cle_ls () {
	ls -l $HOME/.aliases* $HOME/.cle*
}

## cle exe   - show list of all files executed during CLE startup
_cle_exe () {
	echo $CLE_EXE|tr : \\n
}

## cle func  - list all current bash functions
_cle_func () {
	declare -f |sed -n '/.\+\s()/p'
}

## cle clean - clean up home folder from all cle settings
_cle_clean () {
	read -p "Cleaning CLE settings, are you sure? (y/N)  "
	[ "$REPLY" != 'y' ] && return
	unalias -a
	rm -f $CLE_ALIASES $CLE_CF ~/.clerc-local
	cle reload
}

## cle debug [on|off]  - debug mode ($CLE_DEBUG variable)
_cle_debug () {
	case "$1" in
	on) CLE_DEBUG=1 ;;
	off) CLE_DEBUG="" ;;
	esac
	echo CLE_DEBUG=$CLE_DEBUG
}

## cle dk init   -- initialize development kit for CLE
_cle_dk () {
	case "$1" in
	init)
		if [ `basename $CLE_RC` != ".clerc" ]; then
			printb "CLE development kit should be set up on CLE workstation."
			printb "This is remote session: CLE_RC=$CLE_RC"
			return 1
		fi

		P=`pwd`
		ask "Are you ready to prepare CLE development in $P? (y/N) "
		[ "$REPLY" != "y" ] && return 1

		printb "Cloning from git home..."
		CLE_HOME=`sed -n 's/^## home: *\(.*\)/\1/p' $CLE_RC`
		git clone $CLE_HOME

		printb "replacing .clerc and module directory..."
		mv $CLE_RC $HOME/clerc-orig
		ln -s $P/CLE/clerc $CLE_RC
		mkdir $HOME/dotcle-orig
		cd $HOME/.cle
		for MOD in mod-*; do
			if [ -f $P/CLE/dotcle/$MOD ]; then
				mv $MOD $HOME/dotcle-orig/
				ln -s $P/CLE/dotcle/$MOD $HOME/.cle/
			fi
		done
		ln -s CLE/clerc .clerc
		cle reload
		printb CLE development kit ready!
		;;
	help)
		_hlp ${BASH_SOURCE[0]}
		;;
	*)
		echo "'cle dk init' works!"; return 1;;
	esac
}

## cdc      - shortcut into $HOME/d/cle
cdc () {
	local RC=`readlink $CLE_RC`
	if [ -z "$RC" ]; then
		echo "No CLE development here, initialize with 'cle devel'"
		return 1
	fi
	cd `dirname $RC`
	echo CLE development kit: $PWD
}

modgen () {
	local DOTCLE=$HOME/.cle
	for M in $DOTCLE/mod-*; do
		local DESC=`grep "## $MM:" $M | sed "s/^## $MM:\s*//"`
		echo $MM: $DESC
	done

}

# There will be only one CLE!
# toghub() and toglab() are to be removed very probably
# ...or, maybe replaced by generic function to maintain own CLE repository

#toghub () {
#	CLERC_ORG=~/d/cle/clerc
#	CLERC_DST=~/d/cle-ghub/clerc-gh
#	HOME_GH='https:\/\/github.com\/micharbet\/CLE'
#	SRC_GH='https:\/\/raw.githubusercontent.com\/micharbet\/CLE\/master'
#
#	SED1="/^##\shome:/s/: .*/: $HOME_GH/"
#	SED2="/^CLE_SRC=/s/=.*/=$SRC_GH/"
#
#	echo creating $CLERC_DST
#	sed -e "$SED1" -e "$SED2" $CLERC_ORG >$CLERC_DST
#	echo check \'diff $CLERC_ORG $CLERC_DST\'
#	echo --- diff start ---
#	diff $CLERC_ORG $CLERC_DST
#	echo ---- diff end ----
#}
#
#toglab () {
#	CLERC_ORG=~/d/cle-ghub/clerc
#	CLERC_DST=~/d/cle/clerc-gl
#	HOME_GL='https:\/\/github.com\/micharbet\/CLE'
#	SRC_GL='https:\/\/gitlab.cee.redhat.com\/marbet\/cle\/raw\/master'
#
#	SED1="/^##\shome:/s/: .*/: $HOME_GL/"
#	SED2="/^CLE_SRC=/s/=.*/=$SRC_GL/"
#
#	echo creating $CLERC_DST
#	sed -e "$SED1" -e "$SED2" $CLERC_ORG >$CLERC_DST
#	echo check \'diff $CLERC_ORG $CLERC_DST\'
#	echo --- diff start ---
#	diff $CLERC_ORG $CLERC_DST
#	echo ---- diff end ----
#}

# Development kit initialization
readlink $CLE_RC || _cle_dk init

